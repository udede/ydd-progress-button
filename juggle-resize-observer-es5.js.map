{"version":3,"sources":["C:/Users/Crio/WebstormProjects/ydd-progress-button/node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js","C:/Users/Crio/WebstormProjects/ydd-progress-button/node_modules/@juggle/resize-observer/lib/ResizeObservation.js","C:/Users/Crio/WebstormProjects/ydd-progress-button/node_modules/@juggle/resize-observer/lib/ResizeObserver.js","C:/Users/Crio/WebstormProjects/ydd-progress-button/node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js","C:/Users/Crio/WebstormProjects/ydd-progress-button/node_modules/@juggle/resize-observer/lib/ResizeObserverController.js","C:/Users/Crio/WebstormProjects/ydd-progress-button/node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js","C:/Users/Crio/WebstormProjects/ydd-progress-button/node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js","C:/Users/Crio/WebstormProjects/ydd-progress-button/node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js","C:/Users/Crio/WebstormProjects/ydd-progress-button/node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js","C:/Users/Crio/WebstormProjects/ydd-progress-button/node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js","C:/Users/Crio/WebstormProjects/ydd-progress-button/node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js","C:/Users/Crio/WebstormProjects/ydd-progress-button/node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js","C:/Users/Crio/WebstormProjects/ydd-progress-button/node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js","C:/Users/Crio/WebstormProjects/ydd-progress-button/node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js","C:/Users/Crio/WebstormProjects/ydd-progress-button/node_modules/@juggle/resize-observer/lib/utils/element.js","C:/Users/Crio/WebstormProjects/ydd-progress-button/node_modules/@juggle/resize-observer/lib/utils/global.js","C:/Users/Crio/WebstormProjects/ydd-progress-button/node_modules/@juggle/resize-observer/lib/utils/prettify.js","C:/Users/Crio/WebstormProjects/ydd-progress-button/node_modules/@juggle/resize-observer/lib/utils/scheduler.js"],"names":[],"mappings":"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","sourcesContent":["var DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return Object.freeze(this);\n    }\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n","import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n","import { ResizeObserverController } from './ResizeObserverController';\nimport { POLYFILL_CONSOLE_OUTPUT } from './utils/prettify';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (target instanceof Element === false) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (target instanceof Element === false) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return POLYFILL_CONSOLE_OUTPUT;\n    };\n    return ResizeObserver;\n}());\nexport default ResizeObserver;\nexport { ResizeObserver };\n","var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n","import { scheduler } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { hasActiveObservations } from './algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from './algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from './algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from './algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from './algorithms/gatherActiveObservationsAtDepth';\nvar resizeObservers = [];\nvar observerMap = new Map();\nvar watching = 0;\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        resizeObservers.push(detail);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        if (observerMap.has(resizeObserver)) {\n            var detail = observerMap.get(resizeObserver);\n            if (getObservationIndex(detail.observationTargets, target) < 0) {\n                detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n                updateCount(1);\n                scheduler.schedule();\n            }\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        if (observerMap.has(resizeObserver)) {\n            var detail = observerMap.get(resizeObserver);\n            var index = getObservationIndex(detail.observationTargets, target);\n            if (index >= 0) {\n                detail.observationTargets.splice(index, 1);\n                updateCount(-1);\n            }\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        if (observerMap.has(resizeObserver)) {\n            var detail = observerMap.get(resizeObserver);\n            resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            observerMap.delete(resizeObserver);\n            updateCount(-detail.observationTargets.length);\n        }\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController, resizeObservers, process };\n","var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n","import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = boxes.borderBoxSize;\n        this.contentBoxSize = boxes.contentBoxSize;\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n","import { resizeObservers } from '../ResizeObserverController';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n","import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { global } from '../utils/global';\nvar cache = new Map();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return Object.freeze({\n        inlineSize: (switchSizes ? blockSize : inlineSize) || 0,\n        blockSize: (switchSizes ? inlineSize : blockSize) || 0\n    });\n};\nvar zeroBoxes = Object.freeze({\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target) {\n    if (cache.has(target)) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = Object.freeze({\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox) {\n    var _a = calculateBoxSizes(target), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize;\n    return observedBox === ResizeObserverBoxOptions.BORDER_BOX ? borderBoxSize : contentBoxSize;\n};\nexport { calculateBoxSize, calculateBoxSizes, cache };\n","import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n","var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n","import { resizeObservers } from '../ResizeObserverController';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { cache as sizeCache } from './calculateBoxSize';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    sizeCache.clear();\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n","import { resizeObservers } from '../ResizeObserverController';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n","import { resizeObservers } from '../ResizeObserverController';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n","var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isReplacedElement };\n","var global = typeof window === 'undefined' ? this || {} : window;\nexport { global };\n","var POLYFILL_CONSOLE_OUTPUT = 'function ResizeObserver () { [polyfill code] }';\nvar prettifyConsoleOutput = function (fn) {\n    Object.defineProperty(fn, 'toString', {\n        value: function () { return POLYFILL_CONSOLE_OUTPUT; }\n    });\n    return fn;\n};\nexport { POLYFILL_CONSOLE_OUTPUT, prettifyConsoleOutput };\n","import { process } from '../ResizeObserverController';\nimport { prettifyConsoleOutput } from './prettify';\nimport { global } from './global';\nvar CATCH_FRAMES = 60 / 5;\nvar requestAnimationFrame = global.requestAnimationFrame;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar rafSlot = new Map();\nvar resizeObserverSlot = new Map();\nvar scheduled;\nvar dispatchCallbacksOnNextFrame = function () {\n    if (scheduled) {\n        return;\n    }\n    scheduled = true;\n    function runSchedule(t) {\n        scheduled = false;\n        var frameCallbacks = [];\n        var resizeObserverCallbacks = [];\n        rafSlot.forEach(function (callback) { return frameCallbacks.push(callback); });\n        resizeObserverSlot.forEach(function (callback) { return resizeObserverCallbacks.push(callback); });\n        rafSlot.clear();\n        resizeObserverSlot.clear();\n        try {\n            for (var _i = 0, frameCallbacks_1 = frameCallbacks; _i < frameCallbacks_1.length; _i++) {\n                var callback = frameCallbacks_1[_i];\n                callback(t);\n            }\n        }\n        finally {\n            for (var _a = 0, resizeObserverCallbacks_1 = resizeObserverCallbacks; _a < resizeObserverCallbacks_1.length; _a++) {\n                var callback = resizeObserverCallbacks_1[_a];\n                callback(t);\n            }\n        }\n    }\n    ;\n    requestAnimationFrame(runSchedule);\n};\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (frames) {\n        var scheduler = this;\n        resizeObserverSlot.set(this, function ResizeObserver() {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                if (elementsHaveResized) {\n                    scheduler.run(60);\n                }\n                else if (frames) {\n                    scheduler.run(frames - 1);\n                }\n                else {\n                    scheduler.start();\n                }\n            }\n        });\n        dispatchCallbacksOnNextFrame();\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run(CATCH_FRAMES);\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            if ('MutationObserver' in global) {\n                this.observer = new MutationObserver(this.listener);\n                this.observe();\n            }\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar rafIdBase = 0;\nglobal.requestAnimationFrame = function (callback) {\n    if (typeof callback !== 'function') {\n        throw new Error('requestAnimationFrame expects 1 callback argument of type function.');\n    }\n    var handle = rafIdBase += 1;\n    rafSlot.set(handle, function AnimationFrame(t) { return callback(t); });\n    dispatchCallbacksOnNextFrame();\n    return handle;\n};\nglobal.cancelAnimationFrame = function (handle) {\n    rafSlot.delete(handle);\n};\nprettifyConsoleOutput(global.requestAnimationFrame);\nprettifyConsoleOutput(global.cancelAnimationFrame);\nexport { scheduler };\n"],"sourceRoot":"webpack:///"}